// <auto-generated />
using System;
using ITG_Project.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace add
{
    [DbContext(typeof(DataContext))]
    [Migration("20230111073750_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ITG_Project.Models.ProductModel", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("productId"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("price")
                        .HasColumnType("numeric");

                    b.Property<string>("productName")
                        .HasColumnType("text");

                    b.Property<int>("quantity")
                        .HasColumnType("integer");

                    b.HasKey("productId");

                    b.ToTable("Products");

                    b.HasDiscriminator<string>("Discriminator").HasValue("ProductModel");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("ITG_Project.Models.RetailerModel", b =>
                {
                    b.Property<string>("phoneNumber")
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.HasKey("phoneNumber");

                    b.ToTable("Retailers");
                });

            modelBuilder.Entity("ITG_Project.Models.SupplierModel", b =>
                {
                    b.Property<int>("supplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("supplierId"));

                    b.Property<string>("emailAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("text");

                    b.Property<int?>("productId")
                        .HasColumnType("integer");

                    b.HasKey("supplierId");

                    b.HasIndex("productId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("ITG_Project.Models.BillModel", b =>
                {
                    b.HasBaseType("ITG_Project.Models.ProductModel");

                    b.Property<int>("billId")
                        .HasColumnType("integer");

                    b.Property<int?>("billedProductproductId")
                        .HasColumnType("integer");

                    b.Property<int>("productID")
                        .HasColumnType("integer");

                    b.Property<int>("totalAmount")
                        .HasColumnType("integer");

                    b.HasIndex("billedProductproductId");

                    b.HasDiscriminator().HasValue("BillModel");
                });

            modelBuilder.Entity("ITG_Project.Models.SupplierModel", b =>
                {
                    b.HasOne("ITG_Project.Models.ProductModel", "product")
                        .WithMany()
                        .HasForeignKey("productId");

                    b.Navigation("product");
                });

            modelBuilder.Entity("ITG_Project.Models.BillModel", b =>
                {
                    b.HasOne("ITG_Project.Models.ProductModel", "billedProduct")
                        .WithMany()
                        .HasForeignKey("billedProductproductId");

                    b.Navigation("billedProduct");
                });
#pragma warning restore 612, 618
        }
    }
}
